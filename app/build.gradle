apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28

    defaultConfig {
        applicationId "co.nimblehq"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "ENDPOINT", "\"https://nimble-survey-api.herokuapp.com\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

androidExtensions {
    experimental = true
}

dependencies {
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // AndroidX
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.viewpager2:viewpager2:1.0.0-beta02'
    implementation 'com.google.android.material:material:1.0.0'

    // Lifecycle
    def lifecycle_version = '2.2.0-alpha02'
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    kapt "android.arch.lifecycle:compiler:2.2.0"

    def paging_version = "2.1.0"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
    testImplementation "androidx.paging:paging-common-ktx:$paging_version"

    // Dagger
    def dagger_version = '2.23.1'
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    // Glide
    def glide_version = '4.9.0'
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    // Retrofit
    def retrofit_version = '2.6.0'
    implementation("com.squareup.retrofit2:retrofit:$retrofit_version") {
        exclude module: 'okhttp'
    }
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'

    // OKHttp
    def okhttp_version = '3.11.0'
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation group: 'com.squareup.okhttp3', name: 'logging-interceptor', version: "$okhttp_version"
    implementation("com.squareup.okhttp3:okhttp-urlconnection:$okhttp_version") {
        exclude group: 'org.json'
    }

    // Logging
    implementation "com.jakewharton.timber:timber:4.7.1"

    // Tests
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    testImplementation 'android.arch.core:core-testing:1.1.1'
    androidTestImplementation 'android.arch.core:core-testing:1.1.1'
    testImplementation 'org.mockito:mockito-core:2.25.0'
    testImplementation 'com.squareup.okhttp3:mockwebserver:3.12.1'
}
